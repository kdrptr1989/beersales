// <auto-generated />
using System;
using BeerSales.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeerSales.Infrastructure.Migrations
{
    [DbContext(typeof(BeerSaleDbContext))]
    partial class BeerSaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BeerSales.Domain.Models.Beer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AlcoholContent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BreweryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d45a1fb6-571c-49a8-ab84-295673486c30"),
                            AlcoholContent = 6.6m,
                            BreweryId = new Guid("e8a16727-5972-44f9-a812-0498ef378c2e"),
                            Currency = "EUR",
                            Name = "Leffe Blonde",
                            Price = 2.3m
                        },
                        new
                        {
                            Id = new Guid("87d8fa10-335b-4cd1-b9fb-fa601f35d478"),
                            AlcoholContent = 4.5m,
                            BreweryId = new Guid("af8b997f-d49c-475d-8aaa-ca46ad922892"),
                            Currency = "EUR",
                            Name = "Heineken Silver",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = new Guid("40ea0b13-9729-4f40-a54f-25c77c9b550a"),
                            AlcoholContent = 5.6m,
                            BreweryId = new Guid("14806c4b-8571-4f76-a47e-564ab3b2c3df"),
                            Currency = "EUR",
                            Name = "Guinness Draught",
                            Price = 2.6m
                        });
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Brewery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breweries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8a16727-5972-44f9-a812-0498ef378c2e"),
                            Name = "Abbaye de Leffe"
                        },
                        new
                        {
                            Id = new Guid("af8b997f-d49c-475d-8aaa-ca46ad922892"),
                            Name = "Heineken"
                        },
                        new
                        {
                            Id = new Guid("14806c4b-8571-4f76-a47e-564ab3b2c3df"),
                            Name = "Gunniess"
                        });
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TierFrom")
                        .HasColumnType("int");

                    b.Property<int>("TierTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bb7d642-632b-4c31-8c42-3efdb0829d54"),
                            DiscountType = 0,
                            DiscountValue = 10m,
                            TierFrom = 11,
                            TierTo = 20
                        },
                        new
                        {
                            Id = new Guid("bdabd67a-ab3f-4158-bb88-e6ead30e76ad"),
                            DiscountType = 0,
                            DiscountValue = 20m,
                            TierFrom = 21,
                            TierTo = 29
                        });
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("WholesalerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("464d6963-9a40-41cd-a22c-0a59daf94b9b"),
                            BeerId = new Guid("d45a1fb6-571c-49a8-ab84-295673486c30"),
                            Quantity = 100,
                            WholesalerId = new Guid("6512a761-b061-48b0-a576-0f12f93b6f03")
                        },
                        new
                        {
                            Id = new Guid("834420f9-5176-489b-a3b7-825e79ad7b56"),
                            BeerId = new Guid("87d8fa10-335b-4cd1-b9fb-fa601f35d478"),
                            Quantity = 50,
                            WholesalerId = new Guid("6512a761-b061-48b0-a576-0f12f93b6f03")
                        },
                        new
                        {
                            Id = new Guid("f0934390-38fe-45fc-bdfd-1b1cb8d15c71"),
                            BeerId = new Guid("d45a1fb6-571c-49a8-ab84-295673486c30"),
                            Quantity = 30,
                            WholesalerId = new Guid("0de53695-0ce5-4b2f-ad8c-e7b60c9d8b28")
                        },
                        new
                        {
                            Id = new Guid("805cc87b-1842-46e0-89a4-9478d650acd5"),
                            BeerId = new Guid("87d8fa10-335b-4cd1-b9fb-fa601f35d478"),
                            Quantity = 200,
                            WholesalerId = new Guid("0de53695-0ce5-4b2f-ad8c-e7b60c9d8b28")
                        },
                        new
                        {
                            Id = new Guid("57a016ee-4ca4-411a-8874-f9e2daf8b9b8"),
                            BeerId = new Guid("40ea0b13-9729-4f40-a54f-25c77c9b550a"),
                            Quantity = 70,
                            WholesalerId = new Guid("0de53695-0ce5-4b2f-ad8c-e7b60c9d8b28")
                        },
                        new
                        {
                            Id = new Guid("4d358bdd-d88d-4913-8e00-290a0e476f5f"),
                            BeerId = new Guid("d45a1fb6-571c-49a8-ab84-295673486c30"),
                            Quantity = 300,
                            WholesalerId = new Guid("c8d5de6a-4c8a-4050-8850-aa14ca162712")
                        },
                        new
                        {
                            Id = new Guid("4d974e72-c2f3-4df0-b1aa-ee275517cbec"),
                            BeerId = new Guid("87d8fa10-335b-4cd1-b9fb-fa601f35d478"),
                            Quantity = 20,
                            WholesalerId = new Guid("c8d5de6a-4c8a-4050-8850-aa14ca162712")
                        },
                        new
                        {
                            Id = new Guid("66429f25-89cd-45cc-b5e1-b33c1953e2e5"),
                            BeerId = new Guid("40ea0b13-9729-4f40-a54f-25c77c9b550a"),
                            Quantity = 40,
                            WholesalerId = new Guid("c8d5de6a-4c8a-4050-8850-aa14ca162712")
                        });
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Wholesaler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wholesalers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6512a761-b061-48b0-a576-0f12f93b6f03"),
                            Name = "GeneDrinks"
                        },
                        new
                        {
                            Id = new Guid("0de53695-0ce5-4b2f-ad8c-e7b60c9d8b28"),
                            Name = "AllBeerSales"
                        },
                        new
                        {
                            Id = new Guid("c8d5de6a-4c8a-4050-8850-aa14ca162712"),
                            Name = "Forever Beer"
                        });
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Beer", b =>
                {
                    b.HasOne("BeerSales.Domain.Models.Brewery", "Brewery")
                        .WithMany("Beers")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewery");
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Stock", b =>
                {
                    b.HasOne("BeerSales.Domain.Models.Beer", "Beer")
                        .WithMany("Stocks")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerSales.Domain.Models.Wholesaler", "Wholesaler")
                        .WithMany("Stocks")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Beer", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Brewery", b =>
                {
                    b.Navigation("Beers");
                });

            modelBuilder.Entity("BeerSales.Domain.Models.Wholesaler", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
